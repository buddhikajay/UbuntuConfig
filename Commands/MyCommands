invert colours : xcalib -invert -alter
********************************************************************************
reduce brightness xcalib -co 70 -a// 70 is the percentage
********************************************************************************
compiling on arm : arm-linux-gnueabi-gcc hello.c -o hello
********************************************************************************
root file browser :sudo nautilus
**********************************************************************
Change Mac
sudo ifconfig eth0 down
sudo ifconfig eth0 hw ether  xx:xx:xx:xx:xx:xx
sudo ifconfig eth0 up

Where xx:xx:xx:xx:xx:xx represent mac address

For wlan

sudo ifconfig wlan0 down
sudo ifconfig wlan0 hw ether  xx:xx:xx:xx:xx:xx
sudo ifconfig wlan0 up
**************************************************
GIT

git config --global http.proxy cache.mrt.ac.lk

git fetch --all
git reset --hard origin/master
git submodule update --init
git submodule update --recursive
git commit --no-verify
********************************************************************************
Network Manager

sudo service network-manager restart
********************************************************************************
CouchDB

sudo start couchdb
sudo stop couchdb
********************************************************************************
Search

locate:search
********************************************************************************
Apache Server

Restart Apache Server
sudo service apache2 restart
apachectl configtest
sudo a2ensite example.com.conf
********************************************************************************
Symfony

Start Symfony project
symfony new my_project 2.3
********************************************************************************
Create Symbolic Link
sudo ln -s  /home/realFolder/ /var/www/linkFolder
********************************************************************************
Show processes
ps ax
********************************************************************************
npm config set proxy http://proxy.company.com:8080
npm config set https-proxy http://proxy.company.com:8080
npm config rm proxy
npm config rm https-proxy

pm2 start npm -- start
********************************************************************************

********************************************************************************
Brightness Setup:
Add follwing lines at the end of 'etc/rc.local' file, before exit 0 line. 'X' is the brightness level.

echo 5 > /sys/class/backlight/acpi_video0/brightness
********************************************************************************
Proxy:
set:
export http_proxy=http://cache.mrt.ac.lk:3128
export https_proxy=https://cache.mrt.ac.lk:3128

see:
env | grep proxy

unset http_proxy

proxy for atp is defined in /etc/apt/apt.conf

ls: list storage
pwd: print workign directory
man: manual pages
touch: updates file modification time
********************************************************************************
Use 'startct' to start Aventail Connect (requires java)
Use 'startctui' to run the Aventail Connect graphical interface (requires java)
********************************************************************************
sudo adduser <username>

sudo groupadd <groupName>
sudo usermod -a -G groupName userName

sudo groups <username>
groups #show groups

cut -d: -f1 /etc/passwd #list all users
grep 'grpup-name-here' /etc/group # list users of a group
********************************************************************************
bower update --allow-root
********************************************************************************

git pull && \
composer update && \
sudo rm -rf /home/ubuntu/siplo/SiploELearning/app/cache/pro~ && \
php app/console cache:clear --env=prod --no-debug && \
php app/console assetic:dump --env=prod --no-debug && \
php app/console doctrine:schema:update  --force && \
php app/console assets:install && \
sudo chmod -R 777 app/cache app/logs

php app/console gos:websocket:server

php app/console doctrine:cache:clear-metadata
php app/console doctrine:cache:clear-query
php app/console doctrine:cache:clear-result

*******************************************************************************
php app/console server:start siplo.lk:8000 --env=prod --no-debug
php app/console server:stop siplo.lk:8000 --env=prod --no-debug


sudo chgrp -R www-data /var/www/
sudo find /var/www/SiploELearning/web -type d -exec chmod g=rwxs "{}" \;
sudo find /var/www/SiploELearning/web -type f -exec chmod g=rws  "{}" \;

sudo nginx_modsite -e test_website
nginx -c /etc/nginx/nginx.conf -t
sudo /usr/sbin/nginx -c /etc/nginx/nginx.conf -t

php -r "echo getenv('JAVA_HOME');"

*******************************************************************************
processes and ports : lsof
sudo lsof -i -n -P | more
netstat -tulpn | grep :80



*******************************************************************************
MySql

mysql -h localhost -u myname -p mypass mydb
DESCRIBE tbl_name;
CREATE DATABASE siplo_db;
CREATE USER 'siplo'@'localhost' IDENTIFIED BY 'rampeta_pori';
GRANT ALL PRIVILEGES ON siplo_db . * TO 'siplo'@'localhost';
GRANT ALL PRIVILEGES ON siplo_db . * TO 'siplo'@'%' IDENTIFIED BY 'rampeta_pori' WITH GRANT OPTION;
#comment this line to allow remote connections to mysql in /etc/mysql/my.cnf
#bind-address = 127.0.0.1 to #bind-address = 127.0.0.1
FLUSH PRIVILEGES;

#change password
update user set password=PASSWORD('r1lam0ta') where User='root'

#database dump
schemaOnly : mysqldump -d -h localhost -u team -pMyPassword adportal > adportal.sql
whole database : mysqldump -h localhost -u team -pMyPassword adportal > adportal.sql

#database restore
in mysql command ling
	mysql> create database mydb;
	mysql> use mydb;
	mysql> source db_backup.dump;

SELECT user.id, user.username, user.phone_number FROM student LEFT JOIN user ON student.id = user.id WHERE user.phone_number IS NOT NUll

#show foreign key constraints

SHOW CREATE TABLE mytable;


#update
UPDATE event set startDatetime = '2016-02-06 19:15:00' WHERE id = 36;

#rename table
RENAME TABLE `old_name` TO `new_name`

#change password
SET PASSWORD FOR 'jeffrey'@'localhost' = PASSWORD('mypass');

#reset root password
sudo /etc/init.d/mysql stop
sudo mysqld_safe --skip-grant-tables &
mysql -u root
mysql> use mysql;
mysql> update user set password=PASSWORD("NEW-ROOT-PASSWORD") where User='root';
mysql> flush privileges;
mysql> quit

sudo /etc/init.d/mysql stop
sudo /etc/init.d/mysql start

#empty the database
SET FOREIGN_KEY_CHECKS = 0; 
SET @tables = NULL;
SELECT GROUP_CONCAT(table_schema, '.', table_name) INTO @tables
  FROM information_schema.tables 
  WHERE table_schema = 'paymedia_db'; -- specify DB name here.

SET @tables = CONCAT('DROP TABLE ', @tables);
PREPARE stmt FROM @tables;
EXECUTE stmt;
DEALLOCATE PREPARE stmt;
SET FOREIGN_KEY_CHECKS = 1; 


***********************************************************************************
Nodejs forever

forever -o /home/siplo/logs/foever.log -e /home/siplo/logs/foever_err.log  start server.js

*************************************************************************************
Linux Permissions

rwx = 111 in binary = 7
rw- = 110 in binary = 6
r-x = 101 in binary = 5
r-- = 100 in binary = 4

***************************************************************************************
YII

protected/yiic shell protected/config/console.php

****************************************************************************************
server disk/memory usage : df -h
swap:
	sudo /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=2048 && \
	sudo /sbin/mkswap /var/swap.1 && \
	sudo /sbin/swapon /var/swap.1

*****************************************************************************************
usb_modeswitch
sudo usb_modeswitch -c /etc/usb_modeswitch.conf

****************************************************************************************
deskto notifications
notify-send "message"

**************************************************************************************
Python

sudo apt-get -y install build-essential checkinstall && \
sudo apt-get -y install libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev && \
cd ~/Downloads/ && \
wget http://python.org/ftp/python/2.7.11/Python-2.7.11.tgz && \
tar -xvf Python-2.7.11.tgz && \
cd Python-2.7.11 && \
./configure && \
make && \
sudo checkinstall

*******************************************************************************************************************
Virtual Box

VBoxManage internalcommands sethduuid CentOS_6.3_x64.vdi.vdi 

******************************************************************************************************************
TCP Dump

tcpdump -i any -s 0 -w /home/omobio/buddhika/tcp_dump.pcap port 80


*********************************************************************************************************************
-maxdepth : depth of directory
-type : file/diredtory/symlink
-mtime : modified time
-{} : place holder

find . -maxdepth 1 -type f -mtime +1 -exec rm -f {} \;
find . -name '*~' -exec rm -f {} \;
find . -name '.svn' -exec rm -rf {} \;
find . -name '*.php' -exec svn propset "svn:mime-type" "text/php" {} \;
find . -type d -print0 | xargs -0 chmod 0755
find . -type f -print0 | xargs -0 chmod 0644
find . -type f -exec rm -f {} \;
find . -type f -name '*.php' -exec dos2unix {} \;
find . -type f -name '*.php' -exec sed --in-place 's/[[:space:]]\+$//' {} \;


******************************************************************************************************************************
sync with rsync

rsync --progress --stats --recursive --times --delete --exclude "*bak" --exclude "*~" <source-path>/* <target-path>

*********************************************************************************************************************************

Linux Shell

grep : -v : inverse

********************************************************************************************************************************
Init script
sudo update-rc.d sms3 defaults
sudo update-rc.d sms3 remove

**********************************************************************************************************************************
 awk \
 -F'[\,]' \
 -v OFS=','\
 '{print $3, $5, $8}'\
 *_ad_rsp_cdr.log 

 ********************************************************************************************************************************
 cron jobs
 crontab -l -u user

 ********************************************************************************************************************************

 File copy between servers
 scp /home/buddhikajay/Downloads/Siplo.pdf buddhikajay@siplo.lk:/home/buddhikajay

********************************************************************************************************************************

tar -cvf archive_name.tar directory_to_compress
tar -xvf archive_name.tar.gz 

********************************************************************************************************************************
package error : sudo vi /var/lib/dpkg/status
find the location of package : dpkg -l <package name>
get package details : dpkg -s <packagename>

*********************************************************************************************************************************

Remove ppa
Remove from
/etc/apt/sources.list
/etc/apt/sources.list.d/

*********************************************************************************************************************************
Block IP
iptables -A INPUT -s 191.96.249.80 -j DROP

*********************************************************************************************************************************
Add to PATH

~/.profile
to source run : . ~/.profile


*********************************************************************************************************************************
DOCKER

docker build -t siplo-php-node .
docker images
docker tag de3775fc2da0 buddhikajay/siplo-php-node:latest
docker login
docker push buddhikajay/siplo-php-node

docker-compose up --force-recreate
docker network inspect bridge | grep Gateway

docker-machine create -d virtualbox --swarm --swarm-master --swarm-discovery token://YOURTOKENHERE swarm-master
docker-machine create -d virtualbox --swarm --swarm-discovery token://YOURTOKENHERE swarm-agent-00
eval "$(docker-machine env <machine name>)"
docker-machine ssh <machine name>

docker-machine create --driver amazonec2 --amazonec2-region ap-southeast-1 --amazonec2-instance-type t2.small aws
docker-compose -f docker-compose-dev.yml up -d
eval "$(docker-machine env aws)"

aws

docker-machine create --driver amazonec2 --amazonec2-region us-west-2 --amazonec2-instance-type t2.small aws

get container ids : docker ps

stop all containers : 
	docker stop $(docker ps -a -q)
	docker rm $(docker ps -a -q)

get volumes :
	docker ps
	docker inspect <container id>

docker volume ls
docker-compose rm -vf

docker-compose exec php bash

remove docker network : ip link del docker0

Symfony Shortcut
----------------------------------------------------------------

echo 'alias sf="php app/console"' >> ~/.bashrc
echo 'alias sf3="php bin/console"' >> ~/.bashrc

----------------------------------------------------------------

Certbot
certbot certonly --standalone -d example.com -d www.example.com

--------------------------------------------------------------
scanner  : scangearmp

--------------------------------------------------------------


---------------------------------------------------------------
vim commands

Find and replace :%s/<foo>/bar/gc

----------------------------------------------------------------
Ubuntu version
lsb_release -a

clear console
history -cw
---------------------------------------------------------------